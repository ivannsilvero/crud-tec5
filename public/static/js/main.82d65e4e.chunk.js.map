{"version":3,"sources":["types/types.ts","reducers/alumnoReducer.ts","reducers/uiReducer.ts","reducers/rootReducer.ts","store/store.ts","schemas/AlumnSchema.ts","config/global.ts","components/alumnos/CreateAlumnsScreen.tsx","helpers/getAlumnos.ts","actions/alumnos.ts","components/ui/DeleteAlumnFab.tsx","components/alumnos/ModifyAlumnModal.tsx","actions/ui.ts","components/alumnos/SeeAlumnsScreen.tsx","components/ui/HomeScreen.tsx","components/ui/NavbarComponent.tsx","router/AppRouter.tsx","App.tsx","index.tsx"],"names":["UI_OPEN_MODAL","UI_CLOSE_MODAL","ALUMNOS_LOADED","ALUMNO_SET_ACTIVE","ALUMNO_CLEAR_ACTIVE","ALUMNO_UPDATE","ALUMNO_DELETED","initialState","alumnos","activeAlumno","modalOpen","rootReducer","combineReducers","ui","state","action","type","alumno","payload","map","leg_alumno","filter","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","CreateAlumnSchema","Yup","shape","integer","positive","required","apyn_alumno","min","max","dom_alumno","cod_postal","fecha_nac_alumno","email_alumno","email","grupo_sang_alumno","tel_fijo_alumno","tel_movil_alumno","dni_alumno","globalVariables","Object","freeze","url","CreateAlumnsScreen","className","validateOnChange","initialValues","validationSchema","onSubmit","values","a","setSubmitting","fetch","method","body","JSON","stringify","headers","resp","json","data","ok","Swal","fire","title","text","icon","then","location","href","msg","isSubmitting","errors","touched","id","name","placeholder","autoComplete","as","TextField","Select","MenuItem","value","Button","variant","color","disabled","alumnosUrl","getAlumnos","Error","alumnoUpdated","alumnoDeleted","DeleteAlumnFab","dispatch","useDispatch","onClick","getState","console","log","customStyles","content","top","left","right","bottom","marginRight","transform","Modal","setAppElement","ModifyAlumnModal","useSelector","useState","formValues","setFormValues","isDomicilioValid","setIsDomicilioValid","isTelefonoFijoValid","setIsTelefonoFijoValid","isTelefonoMovilValid","setIsTelefonoMovilValid","handleInputChange","target","useEffect","closeModal","isOpen","closeTimeoutMS","onRequestClose","style","overlayClassName","e","preventDefault","length","onChange","SeeAlumnsScreen","handleDoubleClick","onSelectEvent","alumnoSetActive","loading","setState","filtro","setFiltro","orden","setOrden","juan_b_justo","alumnosPreparados","includes","toLowerCase","test","sort","b","InputLabel","displayEmpty","inputProps","FormHelperText","onDoubleClick","src","generateFromString","toString","alt","HomeScreen","NavbarComponent","to","data-toggle","data-target","aria-controls","aria-expanded","aria-label","activeClassName","exact","AppRouter","path","component","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.82d65e4e.chunk.js","sourcesContent":["\nexport interface IAlumno {\n    leg_alumno: number;\n    apyn_alumno: string;\n    dom_alumno: string;\n    cod_postal: number;\n    fecha_nac_alumno: string;\n    email_alumno: string;\n    grupo_sang_alumno: string;\n    tel_fijo_alumno: string;\n    tel_movil_alumno: string;\n    dni_alumno: number;\n};\n\nexport interface IUpdateAlumno {\n    leg_alumno: number,\n    apyn_alumno: string,\n    dom_alumno: string,\n    cod_postal: number,\n    tel_fijo_alumno: string,\n    tel_movil_alumno: string,\n};\n\n// UI\n\nexport const UI_OPEN_MODAL  = '[ui] Open modal';\n\nexport const UI_CLOSE_MODAL = '[ui] Close modal';\n\n// ALUMNOS CRUD\n\nexport const ALUMNOS_LOADED = '[alumno] Alumnos loaded';\n\nexport const ALUMNO_SET_ACTIVE = '[alumno] Set Active';\n\nexport const ALUMNO_ADD_NEW    = '[alumno] Add new';\n\nexport const ALUMNO_CLEAR_ACTIVE = '[alumno] Clear active alumn';\n\nexport const ALUMNO_UPDATE = '[alumno] Update alumno';\n\nexport const ALUMNO_DELETED = '[alumno] Delete alumno';\n\n// FILTROS\n\nexport const ALUMNOS_EN_BATAN = 'filtro_batan';\n\nexport const ALUMNOS_DE_2002 = 'filtro_2002';\n\nexport const ALUMNOS_DE_BATAN_CON_SANGRE_RH_NEGATIVA = 'filtro_batan_y_rh-';\n\nexport const ALUMNOS_ORDENADOS_POR_DNI_ASC = 'orden_dni_asc';\n\nexport const ALUMNOS_DE_JUAN_B_JUSTO = 'filtro_juanbjusto';","import { ALUMNOS_EN_BATAN, ALUMNOS_LOADED, ALUMNO_CLEAR_ACTIVE, ALUMNO_DELETED, ALUMNO_SET_ACTIVE, ALUMNO_UPDATE, IAlumno, IUpdateAlumno } from \"../types/types\";\n\nconst initialState = {\n\n    alumnos: [],\n    activeAlumno: null as null | IAlumno\n\n};\n\nexport const alumnoReducer = ( state = initialState, action: any ) => {\n    switch (action.type) {\n        \n        case ALUMNO_SET_ACTIVE:\n            return {\n                ...state,\n                activeAlumno: action.payload\n            }\n\n        case ALUMNO_CLEAR_ACTIVE:\n            return {\n                ...state,\n                activeAlumno: null\n            }\n\n        case ALUMNO_UPDATE:\n            return {\n                ...state,\n                alumnos: state.alumnos.map(\n                    ( alumno: IUpdateAlumno ) => ( alumno.leg_alumno === action.payload.leg_alumno ) ? action.payload : alumno\n                )\n            }\n\n        case ALUMNO_DELETED:\n            return {\n                ...state,\n                alumnos: state.alumnos.filter(\n                    ( alumno: IAlumno ) => ( alumno.leg_alumno !== state?.activeAlumno?.leg_alumno ) \n                ),\n                activeAlumno: null\n            }\n\n        case ALUMNOS_LOADED:\n            return {\n                ...state,\n                alumnos: [ ...action.payload ]\n            }\n\n        default:\n            return state;\n    }\n}","import { UI_OPEN_MODAL, UI_CLOSE_MODAL } from '../types/types';\n\nconst initialState = {\n    modalOpen: false,\n}\n\nexport const uiReducer = ( state = initialState, action: any ) => {\n\n    switch ( action.type ) {\n        case UI_OPEN_MODAL:\n            return {\n                ...state,\n                modalOpen: true\n            };\n        \n        case UI_CLOSE_MODAL:\n            return {\n                ...state,\n                modalOpen: false\n            }\n\n        default:\n            return state;\n    }\n\n}","import { combineReducers } from 'redux';\nimport { alumnoReducer } from './alumnoReducer';\nimport { uiReducer } from './uiReducer';\n\nexport const rootReducer = combineReducers({\n    ui: uiReducer,\n    alumno: alumnoReducer\n})","import { createStore, compose, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport { rootReducer } from '../reducers/rootReducer';\n\ndeclare global {\n    interface Window {\n      __REDUX_DEVTOOLS_EXTENSION_COMPOSE__?: typeof compose;\n    }\n}\n\nconst composeEnhancers = (typeof window !== 'undefined' && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__) || compose;\n\nexport const store = createStore(\n    rootReducer,\n    composeEnhancers(\n        applyMiddleware( thunk )\n    )\n)","import * as Yup from 'yup';\n\n/**\n * Para más info sobre validación de formularios ver esta página: \n * https://formik.org/docs/guides/validation\n */  \n\nexport const CreateAlumnSchema = Yup.object().shape({\n\n    leg_alumno: Yup\n        .number()\n        .integer('¡Solo enteros!')\n        .positive('¡Tiene que ser mayor a cero, capo!')\n        .required('Este campo es obligatorio'),\n    apyn_alumno: Yup\n        .string()\n        .min(3, '¡Muy corto!')\n        .max(50, '¡Muy largo!')\n        .required('Este campo es obligatorio'),\n    dom_alumno: Yup\n        .string()\n        .min(8, '¡Muy corto!')\n        .max(50, '¡Muy largo!')\n        .required('Este campo es obligatorio'),\n    cod_postal: Yup\n        .number()\n        .required('Este campo es obligatorio'),\n    fecha_nac_alumno: Yup\n        .date()\n        .required('Este campo es obligatorio'),\n    email_alumno: Yup\n        .string()\n        .email('Formato de correo electrónico inválido')\n        .max(50, '¡Muy largo!')\n        .required('Este campo es obligatorio'),\n    grupo_sang_alumno: Yup\n        .string()\n        .max(50, '¡Muy largo!')\n        .required('Pone lo que quieras, pero pone algo. ¡Por favor!'),\n    tel_fijo_alumno: Yup\n        .string()\n        .max(50, '¡Muy largo!')\n        .required('Pone lo que quieras, pero pone algo. ¡Por favor!'),\n    tel_movil_alumno: Yup\n        .string()\n        .max(50, '¡Muy largo!')\n        .required('Este campo es obligatorio'),\n    dni_alumno: Yup\n        .number()\n        .min(1000000, 'Ni Pablo Escobar se animó a tanto')\n        .max(1000000000000, 'Nuevo título desbloqueado: Falsificador serial de documentos')\n        .required('No hay escape. Este campo es obligatorio')\n});","export const globalVariables = Object.freeze({\n    url: 'https://eestn5-crud.herokuapp.com'\n    // 'http://localhost:4000' \n});","import React from 'react';\n\nimport { Formik, Field, Form } from 'formik';\nimport {\n    TextField,\n    Button,\n    Select,\n    MenuItem\n  } from '@material-ui/core';\nimport Swal from 'sweetalert2';\n\nimport { IAlumno } from '../../types/types';\nimport { CreateAlumnSchema } from '../../schemas/AlumnSchema';\n\nimport '../../styles/CreateAlumnsScreen.css';\nimport { globalVariables } from '../../config/global';\n\nexport const CreateAlumnsScreen = () => {\n\n    return (\n        <div className=\"container mt-3\">\n            <h1> Dar de alta alumno </h1>\n            <hr/>\n            <Formik\n                validateOnChange={ true }\n                initialValues={{\n                    leg_alumno: 1234,\n                    apyn_alumno: '',\n                    dom_alumno: '',\n                    cod_postal: 7600,\n                    fecha_nac_alumno: '',\n                    email_alumno: '',\n                    grupo_sang_alumno: '',\n                    tel_fijo_alumno: '',\n                    tel_movil_alumno: '',\n                    dni_alumno: 43742273\n                }}\n                validationSchema={ CreateAlumnSchema }\n                onSubmit={ async ( values: IAlumno, { setSubmitting } ) => {\n                    setSubmitting(true);\n                    // make async call (in this case, a post)\n                    const resp = await fetch(`${ globalVariables.url }/api/alumnos`, {\n                            method: 'POST',\n                            body: JSON.stringify(values),\n                            headers: {\n                                'Content-Type': 'application/json'\n                            }\n                        });\n                    const data = await resp.json();\n                    if ( data.ok ) {\n                        Swal.fire({\n                            title: '¡Alumno cargado con éxito!',\n                            text: 'Será redirigido a la página principal',\n                            icon: 'success'\n                        }).then(() => {\n                            window.location.href = '/ver';\n                        });\n                    } else {\n                        Swal.fire({\n                            title: 'Algo salió mal...',\n                            text: data.msg,\n                            icon: 'error'\n                        });\n                    }\n                    setSubmitting(false);\n                }}\n            >\n                {({ values, isSubmitting, errors, touched }) => (\n                    <Form>\n\n                        <div className=\"form-group\">\n                            <label className=\"control-label col-sm-2\"> Legajo </label>\n                            <div className=\"col-sm-10\">\n                                <Field \n                                    className=\"form-control\" \n                                    id=\"legajo\" \n                                    name=\"leg_alumno\" \n                                    placeholder=\"123\"\n                                    autoComplete=\"off\"\n                                    type=\"input\"\n                                    as={ TextField }\n                                    />\n                                    { ( errors.leg_alumno && touched.leg_alumno ) &&\n                                        <div className=\"form-error m-1\"> { errors.leg_alumno } </div> \n                                    }\n                            </div>\n                        </div>\n\n                        <div className=\"form-group\">\n                            <label className=\"control-label col-sm-2\"> Apellido y nombre </label>\n                            <div className=\"col-sm-10\">\n                                <Field \n                                    className=\"form-control\" \n                                    id=\"apyn\" \n                                    name=\"apyn_alumno\" \n                                    placeholder=\"Iván Silvero\"\n                                    autoComplete=\"off\"\n                                    type=\"input\"\n                                    as={ TextField }\n                                    />\n                                    { ( errors.apyn_alumno && touched.apyn_alumno ) &&\n                                        <div className=\"form-error m-1\"> { errors.apyn_alumno } </div>\n                                    }\n                            </div>\n                        </div>\n\n                        <div className=\"form-group\">\n                            <label className=\"control-label col-sm-2\"> Domicilio </label>\n                            <div className=\"col-sm-10\">\n                                <Field \n                                    className=\"form-control\" \n                                    id=\"domicilio\" \n                                    name=\"dom_alumno\" \n                                    placeholder=\"Juan B. Justo 4287\"\n                                    autoComplete=\"off\"\n                                    type=\"input\"\n                                    as={ TextField }\n                                    />\n                                    {\n                                        ( errors.dom_alumno && touched.dom_alumno ) &&\n                                            <div className=\"form-error m-1\"> { errors.dom_alumno } </div>\n                                    }\n                            </div>\n                        </div>\n                        \n                        <div className=\"form-group\">\n                            <label className=\"control-label col-sm-2\"> Código Postal </label>\n                            <div className=\"col-sm-10\">\n                                <Field \n                                    className=\"form-control\" \n                                    id=\"codigo_postal\" \n                                    name=\"cod_postal\"\n                                    type=\"select\"\n                                    as={ Select }\n                                    >\n                                        <MenuItem value={ 7600 }> Mar del Plata </MenuItem>\n                                        <MenuItem value={ 7601 }> Batán </MenuItem>\n                                        <MenuItem value={ 8000 }> Bahía Blanca </MenuItem>\n                                </Field>\n                                    {\n                                        ( errors.cod_postal && touched.cod_postal ) &&\n                                            <div className=\"form-error m-1\"> { errors.dom_alumno } </div>\n                                    }\n                            </div>\n                        </div>\n\n                        <div className=\"form-group\">\n                            <label className=\"control-label col-sm-2\"> Fecha de nacimiento </label>\n                            <div className=\"col-sm-10\">\n                                <Field \n                                    className=\"form-control\" \n                                    id=\"fecha_de_nacimiento\" \n                                    name=\"fecha_nac_alumno\" \n                                    placeholder=\"Formato: YYYY-MM-DD. Por ejemplo, 2020-10-23\" \n                                    autoComplete=\"off\"\n                                    type=\"input\"\n                                    as={ TextField }\n                                    />\n                                    {\n                                        ( errors.fecha_nac_alumno && touched.fecha_nac_alumno ) &&\n                                            <div className=\"form-error m-1\"> { errors.fecha_nac_alumno } </div>\n                                    }\n                            </div>\n                        </div>\n                        \n                        <div className=\"form-group\">\n                            <label className=\"control-label col-sm-2\"> Correo electrónico </label>\n                            <div className=\"col-sm-10\">\n                                <Field \n                                    className=\"form-control\" \n                                    type=\"email\" \n                                    id=\"email\" \n                                    name=\"email_alumno\" \n                                    placeholder=\"ejemplo@gmail.com\" \n                                    autoComplete=\"off\"\n                                    as={ TextField }\n                                    />\n                                    {\n                                        ( errors.email_alumno && touched.email_alumno ) &&\n                                            <div className=\"form-error m-1\"> { errors.email_alumno } </div>\n                                    }\n                            </div>\n                        </div>\n                        \n                        <div className=\"form-group\">\n                            <label className=\"control-label col-sm-2\"> Grupo sanguíneo </label>\n                            <div className=\"col-sm-10\">\n                                <Field \n                                    className=\"form-control\" \n                                    id=\"grupo_sang\" \n                                    name=\"grupo_sang_alumno\" \n                                    placeholder=\"Si no lo sabe, ponga lo que quiera. \" \n                                    autoComplete=\"off\"\n                                    type=\"input\"\n                                    as={ TextField }\n                                    />\n                                    {\n                                        ( errors.grupo_sang_alumno && touched.grupo_sang_alumno ) &&\n                                            <div className=\"form-error m-1\"> { errors.grupo_sang_alumno } </div>\n                                    }\n                            </div>\n                        </div>\n\n                        <div className=\"form-group\">\n                            <label className=\"control-label col-sm-2\"> Teléfono fijo </label>\n                            <div className=\"col-sm-10\">\n                                <Field \n                                    className=\"form-control\" \n                                    id=\"tel_fijo\" \n                                    name=\"tel_fijo_alumno\" \n                                    placeholder=\"Si no lo sabe, ponga lo que quiera.\" \n                                    autoComplete=\"off\"\n                                    type=\"input\"\n                                    as={ TextField }\n                                    />\n                                    {\n                                        ( errors.tel_fijo_alumno && touched.tel_fijo_alumno ) &&\n                                            <div className=\"form-error m-1\"> { errors.tel_fijo_alumno } </div>\n                                    }                                    \n                            </div>\n                        </div>\n                        \n                        <div className=\"form-group\">\n                            <label className=\"control-label col-sm-2\"> Teléfono móvil </label>\n                            <div className=\"col-sm-10\">\n                                <Field \n                                    className=\"form-control\" \n                                    id=\"tel_movil\" \n                                    name=\"tel_movil_alumno\" \n                                    placeholder=\"2235955948\" \n                                    autoComplete=\"off\"\n                                    type=\"input\"\n                                    as={ TextField }\n                                    />\n                                    {\n                                        ( errors.tel_movil_alumno && touched.tel_movil_alumno ) &&\n                                            <div className=\"form-error m-1\"> { errors.tel_movil_alumno } </div>\n                                    }                                       \n                            </div>\n                        </div>\n                        \n                        <div className=\"form-group\">\n                            <label className=\"control-label col-sm-2\"> DNI </label>\n                            <div className=\"col-sm-10\">\n                                <Field \n                                    className=\"form-control\" \n                                    id=\"dni_alumno\" \n                                    name=\"dni_alumno\"\n                                    placeholder=\"43742273\" \n                                    autoComplete=\"off\"\n                                    type=\"input\"\n                                    as={ TextField }\n                                    />\n                                    {\n                                        ( errors.dni_alumno && touched.dni_alumno ) &&\n                                            <div className=\"form-error m-1\"> { errors.dni_alumno } </div>\n                                    }                                     \n                            </div>\n                        </div>\n\n                        <div className=\"form-group\">\n                            <div className=\"col-sm-offset-2 col-sm-10\">\n                                <Button variant=\"contained\" color=\"primary\" disabled={ isSubmitting } type=\"submit\" > Enviar formulario </Button>\n                            </div>\n                        </div>\n\n                    </Form>\n                )}\n            </Formik>\n        </div>\n    )\n}\n","import { IAlumno } from '../types/types';\nimport { globalVariables } from '../config/global';\n\nconst alumnosUrl = `${ globalVariables.url }/api/alumnos`;\n\nexport const getAlumnos = async () => { \n    const resp = await fetch(alumnosUrl);\n    if ( !resp.ok ) throw new Error('No se pudo realizar la petición');\n    const { alumnos: data } = await resp.json();\n    const alumnos = data.map((alumno: IAlumno)  => {\n        return {\n        leg_alumno: alumno.leg_alumno, \n        apyn_alumno: alumno.apyn_alumno, \n        dom_alumno: alumno.dom_alumno,\n        cod_postal: alumno.cod_postal,\n        fecha_nac_alumno: alumno.fecha_nac_alumno,\n        email_alumno: alumno.email_alumno,\n        grupo_sang_alumno: alumno.grupo_sang_alumno,\n        tel_fijo_alumno: alumno.tel_fijo_alumno,\n        tel_movil_alumno: alumno.tel_movil_alumno,\n        dni_alumno: alumno.dni_alumno\n        }\n    });\n\n    return alumnos;\n\n}\n","import { Dispatch } from 'redux';\nimport Swal from 'sweetalert2';\nimport { globalVariables } from '../config/global';\nimport { ALUMNOS_LOADED, ALUMNO_ADD_NEW, ALUMNO_CLEAR_ACTIVE, ALUMNO_DELETED, ALUMNO_SET_ACTIVE, ALUMNO_UPDATE, IAlumno, IUpdateAlumno } from '../types/types';\n\nexport const alumnoAddNew = ( alumno: IAlumno ) => ({\n    type: ALUMNO_ADD_NEW,\n    payload: alumno\n});\n\nexport const alumnoSetActive = ( alumno: IAlumno ) => ({\n    type: ALUMNO_SET_ACTIVE,\n    payload: alumno\n});\n\nexport const clearActiveAlumno = () => ({\n    type: ALUMNO_CLEAR_ACTIVE\n});\n\nexport const alumnosStartLoading = ( ) => {\n    return async ( dispatch: Dispatch ) => {\n        try {\n            \n            const resp = await fetch(`${ globalVariables.url }/api/alumnos/`);\n            const data = await resp.json();\n\n            const alumnos = data.alumnos;\n\n            dispatch( alumnosLoaded( alumnos ) );\n\n        } catch (error) {\n            console.log(error);\n        }\n    }\n}\n\nconst alumnosLoaded = ( alumnos: IAlumno[] ) => ({\n    type: ALUMNOS_LOADED,\n    payload: alumnos\n})\n\nexport const startAlumnoUpdate = ( alumno: IUpdateAlumno ) => {\n    return async ( dispatch: Dispatch ) => {\n        try {\n            const resp = await fetch(`${ globalVariables.url }/api/alumnos/${ alumno.leg_alumno }`, {\n                method: 'PUT',\n                body: JSON.stringify(alumno),\n                headers: {\n                    'Content-Type': 'application/json'\n                }\n            });\n            const data = await resp.json();\n            if ( data.ok ) {\n                Swal.fire({\n                    title: '¡Alumno actualizado exitosamente!',\n                    text: 'Los cambios tomarán efecto al cerrar este alerta',\n                    icon: 'success'\n                });\n                dispatch( alumnoUpdated( alumno ) );\n            } else {\n                Swal.fire({\n                    title: 'Algo salió mal...',\n                    text: data.msg,\n                    icon: 'error'\n                });\n            }\n\n        } catch (error) {\n            console.log(error);\n        }\n    }\n}\n\nexport const alumnoStartDelete = () => {\n    return async ( dispatch: Dispatch, getState: () => any) => {\n\n        const { leg_alumno } = getState().alumno.activeAlumno;\n\n        try {\n            const resp = await fetch(`${ globalVariables.url }/api/alumnos/${ leg_alumno }`, {\n                method: 'DELETE',\n                headers: {\n                    'Content-Type': 'application/json'\n                }\n            });\n            const data = await resp.json();\n            if ( data.ok ) {\n                dispatch( alumnoDeleted() );\n            } else {\n                Swal.fire({\n                    title: 'Algo salió mal...',\n                    text: data.msg,\n                    icon: 'error'\n                });\n            }\n\n        } catch (error) {\n            console.log(error)\n        }\n    }\n}\n\nconst alumnoUpdated = ( alumno: IUpdateAlumno ) => ({\n    type: ALUMNO_UPDATE,\n    payload: alumno\n});\n\nconst alumnoDeleted = () => ({\n    type: ALUMNO_DELETED\n});","import React from 'react'\nimport { useDispatch } from 'react-redux';\nimport { alumnoStartDelete } from '../../actions/alumnos';\n\nexport const DeleteAlumnFab: React.FC = () => {\n    \n    const dispatch = useDispatch();\n\n    const handleDelete = () => {\n        dispatch( alumnoStartDelete() );\n        window.location.href = '/ver';\n    }\n\n    return (\n        <div>\n            <button\n            className=\"btn btn-danger fab-danger\"\n            onClick={ handleDelete }\n        >\n            <i className=\"fas fa-trash\"></i>\n            <span> Borrar alumno </span>\n        </button>\n        </div>\n    )\n}\n","import React, { SyntheticEvent, useEffect, useState } from 'react'\nimport Modal from 'react-modal';\nimport { RootStateOrAny, useDispatch, useSelector } from 'react-redux';\nimport { clearActiveAlumno, startAlumnoUpdate } from '../../actions/alumnos';\nimport { uiCloseModal } from '../../actions/ui';\n\nconst customStyles = {\n    content : {\n      top                   : '50%',\n      left                  : '50%',\n      right                 : 'auto',\n      bottom                : 'auto',\n      marginRight           : '-50%',\n      transform             : 'translate(-50%, -50%)'\n    }\n};\n\nModal.setAppElement('#root')\n\nexport const ModifyAlumnModal: React.FC = () => {\n    \n    const { modalOpen } = useSelector(( state: RootStateOrAny ) => state.ui )\n\n    const { activeAlumno } = useSelector(( state: RootStateOrAny ) => state.alumno )\n\n    const dispatch = useDispatch();\n\n    const [ formValues, setFormValues ] = useState({\n        leg_alumno: 0,\n        apyn_alumno: '',\n        dom_alumno: '',\n        cod_postal: 7600,\n        tel_fijo_alumno: '',\n        tel_movil_alumno: '',\n    });\n\n    const [ isDomicilioValid, setIsDomicilioValid ] = useState(true);\n\n    const [ isTelefonoFijoValid, setIsTelefonoFijoValid] = useState(true);\n\n    const [ isTelefonoMovilValid, setIsTelefonoMovilValid ] = useState(true);\n\n    const handleInputChange = ( { target }: React.ChangeEvent<HTMLInputElement> | React.ChangeEvent<HTMLSelectElement> ) => {\n\n        setFormValues({\n            ...formValues,\n            [ target.name ]: target.value\n        })\n\n    }\n\n    const { apyn_alumno, dom_alumno, cod_postal, tel_fijo_alumno, tel_movil_alumno } = formValues;\n\n    useEffect(() => {\n        if ( activeAlumno ) {\n            setFormValues( activeAlumno );\n        }\n    }, [ activeAlumno, setFormValues ])\n\n    const closeModal = () => {\n        dispatch( uiCloseModal() );\n        dispatch( clearActiveAlumno() )\n    }\n\n    const handleSubmit = ( e: SyntheticEvent ) => {\n        e.preventDefault();\n\n        if ( ( dom_alumno.length <= 8 || dom_alumno.length >= 50 ) && dom_alumno.length !== 0 ) {\n            return setIsDomicilioValid(false);\n        }\n\n        if ( tel_fijo_alumno.length >= 50 && tel_fijo_alumno.length !== 0) {\n            return setIsTelefonoFijoValid(false);\n        }\n        \n        if ( tel_movil_alumno.length >= 50 && tel_movil_alumno.length !== 0) {\n            return setIsTelefonoMovilValid(false);\n        }\n\n        dispatch( startAlumnoUpdate( formValues ) );\n\n        setIsDomicilioValid(true);\n        setIsTelefonoFijoValid(true);\n        setIsTelefonoMovilValid(true);\n\n        window.location.href = '/ver';\n\n        closeModal();\n\n    }\n \n    return (\n        <Modal\n            isOpen={ modalOpen }\n            closeTimeoutMS={ 200 }\n            onRequestClose={ closeModal }\n            style={ customStyles }\n            className=\"modal\"\n            overlayClassName=\"modal-fondo\"\n        >\n            <h1 className=\"m-3\"> { apyn_alumno } </h1>\n            <hr/>\n                \n            <form \n                className=\"container\"\n                onSubmit={ handleSubmit }\n            >\n\n                    <div className=\"form-group\">\n                        <label> Domicilio </label>\n                        <input \n                            type=\"text\"\n                            className={ `form-control ${ !isDomicilioValid && 'is-invalid' } ` }\n                            name=\"dom_alumno\"\n                            autoComplete=\"off\"\n                            value={ dom_alumno }\n                            onChange={ handleInputChange } \n                        />\n                    </div>\n\n                    <div className=\"form-group\">\n                        <label> Código Postal </label>\n                        <select\n                            name=\"cod_postal\"\n                            className=\"form-control\"\n                            value={ cod_postal } \n                            onChange={ handleInputChange } \n                        >\n                            <option value={ 7600 }> Mar del Plata </option>\n                            <option value={ 7601 }> Batán </option>\n                            <option value={ 8000 }> Bahía Blanca </option>\n                        </select>\n                    </div>\n\n                    <div className=\"form-group\">\n                        <label> Teléfono fijo </label>\n                        <input \n                            type=\"text\"\n                            className={ `form-control ${ !isTelefonoFijoValid && 'is-invalid' } ` }\n                            name=\"tel_fijo_alumno\"\n                            autoComplete=\"off\"\n                            value={ tel_fijo_alumno }\n                            onChange={ handleInputChange }  \n                        />\n                    </div>\n\n                    <div className=\"form-group\">\n                        <label> Teléfono móvil </label>\n                        <input \n                            type=\"text\"\n                            className={ `form-control ${ !isTelefonoMovilValid && 'is-invalid' } ` }\n                            name=\"tel_movil_alumno\"\n                            autoComplete=\"off\"\n                            value={ tel_movil_alumno }\n                            onChange={ handleInputChange }  \n                        />\n                    </div>\n\n                    <button\n                        type=\"submit\"\n                        className=\"btn btn-outline-primary btn-block\"\n                    >\n                        <i className=\"far fa-save\"></i>\n                        <span> Guardar</span>\n                    </button>\n\n            </form>\n\n\n\n        </Modal>\n    )\n}\n","import { UI_CLOSE_MODAL, UI_OPEN_MODAL } from '../types/types';\n\nexport const uiOpenModal = () => ({\n    type: UI_OPEN_MODAL\n});\n\nexport const uiCloseModal = () => ({\n    type: UI_CLOSE_MODAL\n});","import React, { ChangeEvent, SyntheticEvent, useEffect, useState } from 'react'\n\nimport { generateFromString } from 'generate-avatar';\n\nimport { ALUMNOS_DE_2002, ALUMNOS_DE_BATAN_CON_SANGRE_RH_NEGATIVA, ALUMNOS_DE_JUAN_B_JUSTO, ALUMNOS_EN_BATAN, ALUMNOS_ORDENADOS_POR_DNI_ASC, IAlumno } from '../../types/types';\nimport { getAlumnos } from '../../helpers/getAlumnos';\n\nimport '../../styles/SeeAlumnsScreen.css';\nimport { DeleteAlumnFab } from '../ui/DeleteAlumnFab';\nimport { ModifyAlumnModal } from './ModifyAlumnModal';\nimport { RootStateOrAny, useDispatch, useSelector } from 'react-redux';\nimport { uiOpenModal } from '../../actions/ui';\nimport { alumnoSetActive } from '../../actions/alumnos';\nimport { FormHelperText, InputLabel, MenuItem, Select } from '@material-ui/core';\n\nexport const SeeAlumnsScreen = () => {\n\n  const dispatch = useDispatch();\n\n  const { activeAlumno } = useSelector(( state: RootStateOrAny ) => state.alumno);\n\n  const handleDoubleClick = ( e: SyntheticEvent) => {\n    dispatch( uiOpenModal() );\n  }\n\n  const onSelectEvent = (e: SyntheticEvent, alumno: IAlumno) => {\n    dispatch( alumnoSetActive(alumno) );\n  }\n\n  interface Provider {\n    data: any,\n    loading: boolean\n  }\n\n  /**\n   * Del state solo me interesa la data, asi que desestructuro el objeto, y renombro a data como alumnos.\n   */\n  const [ { data: alumnos }, setState ] = useState<Provider>({\n    data: [],\n    loading: true\n  });\n\n  const [ filtro, setFiltro ] = useState('');\n\n  const [ orden, setOrden ] = useState('');\n\n  const handleChange = ( e: ChangeEvent<{ value: unknown }> ) => {\n    setFiltro( e.target.value as string );\n  }\n\n  const handleOrderChange = ( e: ChangeEvent<{ value: unknown }>  ) => {\n    setOrden( e.target.value as string )\n  }\n\n  const juan_b_justo = /justo [0-9]/;\n\n  const alumnosFiltrados = alumnos.filter( ( alumno: IAlumno ) => {\n    switch ( filtro ) {\n      case ALUMNOS_EN_BATAN:\n        \n        return alumno.cod_postal === 7601;\n\n      case ALUMNOS_DE_2002:\n\n        return alumno.fecha_nac_alumno.includes('2002');\n    \n      case ALUMNOS_DE_BATAN_CON_SANGRE_RH_NEGATIVA:\n\n        return ( alumno.grupo_sang_alumno ).toLowerCase() === 'rh-' && alumno.cod_postal === 7601;\n\n      case ALUMNOS_DE_JUAN_B_JUSTO:\n        return juan_b_justo.test( ( alumno.dom_alumno ).toLowerCase() );\n\n      default:\n        return alumno;\n    }\n  });\n\n  // De esta forma, ordenamos a los alumnos según el campo elegido\n  const alumnosPreparados = alumnosFiltrados.sort( ( a: any , b: any ) => { \n    switch ( orden ) {\n      case ALUMNOS_ORDENADOS_POR_DNI_ASC:\n        console.log(`${a.dni_alumno} y su tipo es ${ typeof a.dni_alumno }`);\n        return a.dni_alumno - b.dni_alumno;\n    \n      default:\n        return 1;\n    }\n  });\n\n\n  useEffect(() => {\n    getAlumnos()\n      .then(alumnos => {\n        setState({\n          data: alumnos,\n          loading: false\n        });\n      })\n  }, []);\n\n  return (\n    <div className=\"container mt-3\">\n      <div className=\"grid-container\">\n        <div className=\"grid-child\">\n          <InputLabel id=\"demo-simple-select-placeholder-label-label\">\n            Filtrar alumnos\n          </InputLabel>\n          <Select\n            value={ filtro }\n            onChange={ handleChange }\n            displayEmpty\n            inputProps={{ 'aria-label': 'Without label' }}\n          >\n            <MenuItem value=\"\" disabled>\n              Elija lo que más le guste\n            </MenuItem>\n            <MenuItem value=\"\"> Filtro desactivado </MenuItem>\n            <MenuItem value=\"filtro_batan\"> Filtrar: Viven en Batán </MenuItem>\n            <MenuItem value=\"filtro_2002\"> Filtrar: Nacidos en 2002 </MenuItem>\n            <MenuItem value=\"filtro_batan_y_rh-\"> Filtrar: Viven en Batán y grupo sanguíneo RH- </MenuItem>\n            <MenuItem value=\"filtro_juanbjusto\"> Filtrar: Viven en Av. J.B. Justo </MenuItem>\n          </Select>\n          <FormHelperText> Hola Mundo </FormHelperText>\n        </div>\n        <div className=\"grid-child\">\n          <InputLabel id=\"demo-simple-select-placeholder-label-label\">\n            Ordenar alumnos\n          </InputLabel>\n          <Select\n            value={ orden }\n            onChange={ handleOrderChange }\n            displayEmpty\n            inputProps={{ 'aria-label': 'Without label' }}\n          >\n            <MenuItem value=\"\" disabled>\n              Elija lo que más le guste\n            </MenuItem>\n            <MenuItem value=\"\"> Orden por defecto </MenuItem>\n            <MenuItem value=\"orden_dni_asc\"> Ordenar: DNI ASCENDENTE </MenuItem>\n          </Select>\n        </div>\n      </div>\n      \n      <hr/>\n      \n      <div className=\"card-columns\">\n        {  \n          alumnosPreparados.map((alumno: IAlumno) => (\n            <div \n              className=\"card clickable\" \n              key={ alumno.leg_alumno }\n              onDoubleClick={ handleDoubleClick }\n              onClick={ (e: SyntheticEvent) => {\n                onSelectEvent(e, alumno)\n              } }\n            >\n            <img \n              className=\"card-img-top img-fluid\" \n              src={ `data:image/svg+xml;utf8,${ generateFromString( alumno.leg_alumno.toString() ) }` } \n              alt=\"Avatar del alumno\"\n            />  \n              <div className=\"card-block m-3\">\n                <h4 className=\"card-title\"> { alumno.apyn_alumno } </h4>\n                <hr/>\n                <p className=\"card-text\"> - Domicilio:  { alumno.dom_alumno } ({ alumno.cod_postal }) </p>\n                <p className=\"card-text\"> - DNI:  { alumno.dni_alumno } </p>\n                <p className=\"card-text\"> - Teléfono Móvil: { alumno.tel_movil_alumno } </p>\n                <p className=\"card-text\"> - Fecha de nacimiento: { alumno.fecha_nac_alumno } </p>\n                <p className=\"card-text\"> - Grupo sanguíneo: { alumno.grupo_sang_alumno } </p>\n              </div>\n            </div>\n          ))\n        }\n      </div>\n\n      <ModifyAlumnModal />        \n\n      {\n          ( activeAlumno ) && <DeleteAlumnFab /> \n      }      \n    \n    </div>\n  )\n\n}\n","import React from 'react'\nimport yo from './yo.jpeg';\n\nexport const HomeScreen = () => {\n    return (\n        <div className=\"container m-3\">\n            <div className=\"content-center align-items-center\">\n                <h1> Proyecto final </h1>\n                <hr/>\n                <p> Para ver la documentación de este proyecto, vayan al siguiente link: </p>\n                <a href=\"https://github.com/ivannsilvero/crud-tec5\"> - Repositorio del proyecto </a>\n                <p className=\"lead m-3\"> Abrazo, <br/> Iván </p>\n            </div>\n        </div>\n    )\n}\n","import React from 'react'\nimport { Link, NavLink } from 'react-router-dom'\n\nexport const NavbarComponent = () => {\n    return (\n        <nav className=\"navbar navbar-expand-lg navbar-light bg-light\">\n            \n            <Link className=\"navbar-brand\" to=\"/\" >\n                EESTN5\n            </Link>\n\n            <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n                <span className=\"navbar-toggler-icon\"></span>\n            </button>\n\n            <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\" >\n                <div className=\"navbar-nav\">\n\n                    <NavLink \n                        activeClassName=\"active\"\n                        className=\"nav-item nav-link\" \n                        exact\n                        to=\"/ver\"\n                    >\n                        Ver alumnos\n                    </NavLink>\n\n                    <NavLink \n                        activeClassName=\"active\"\n                        className=\"nav-item nav-link\" \n                        exact\n                        to=\"/crear\"\n                    >\n                        Crear alumno\n                    </NavLink>\n\n                </div>\n            </div>\n\n        </nav>\n    )\n}","import React from 'react';\nimport { BrowserRouter as Router, Switch, Route, Redirect } from 'react-router-dom';\n\nimport { CreateAlumnsScreen } from '../components/alumnos/CreateAlumnsScreen';\nimport { SeeAlumnsScreen } from '../components/alumnos/SeeAlumnsScreen';\nimport { HomeScreen } from '../components/ui/HomeScreen';\nimport { NavbarComponent } from '../components/ui/NavbarComponent';\n  \nexport const AppRouter = () => {\n\n    return (\n        <Router>\n            <NavbarComponent />\n                <Switch>\n                    \n                    <Route exact path=\"/ver\" component={ SeeAlumnsScreen } />\n                   \n                    <Route exact path=\"/crear\" component={ CreateAlumnsScreen } />\n\n                    <Route exact path=\"/\" component={ HomeScreen } />\n                    \n                    <Redirect to=\"/\" />\n\n                </Switch>\n\n        </Router>\n    )\n}","import React from 'react';\nimport { Provider } from 'react-redux';\nimport { store } from './store/store';\nimport { AppRouter } from './router/AppRouter';\n\nexport const App = () => {\n  return (\n    <Provider store={ store }>\n      <AppRouter />\n    </Provider>\n  );\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}